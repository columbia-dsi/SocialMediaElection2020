[
["index.html", "Understanding 2020 Presidential Polls from Social Media Perspective Chapter 1 Introduction 1.1 Background 1.2 Trends 1.3 Project 1.4 References", " Understanding 2020 Presidential Polls from Social Media Perspective Kevin Gao (wg2311), Haibo Yu (hy2628) December, 2019 Chapter 1 Introduction 1.1 Background The election of the president and the vice president of the United States is an indirect election in which citizens of the United States who are registered to vote in one of the fifty U.S. states or in Washington, D.C. Every once a while, the election will impact the U.S. in many aspects, such as job experience, income taxes, government investments and since U.S. plays a key role in golabal econemy, it cerntianly drive attention from every tax payer. Foundamentaly, today’s democracy allow every citizen can vote and every vote count as one. Vote America - Credit: Bing Images However, does every individual knows enough about the candidates that they have to choose from? Candidats - Credit: Bing Images 1.2 Trends A key part of the United States presidential campaigns is the use of media and framing. Candidates are able to frame their opponents and current issues in ways to affect the way voters will see events and the other presidential candidates. Advances in technology and media have also affected presidential campaigns. Since the development of the internet in the mid-90s, Internet activism has also become an invaluable component of presidential campaigns, especially since 2000. In 2008, the internet became a grassroots and a voice of the people tool. A study done by the Pew Internet &amp; American Life Project in conjunction with Princeton Survey Research Associates in November 2010 shows that 54 percent of adults in the United States used the internet to get information about the 2010 midterm elections and about specific candidates. Internet channels such as YouTube were used by candidates to share speeches and ads for free. This also served as a forum for users to attack other candidates by uploading videos of gaffes.[1] A study done by the Pew Internet &amp; American Life Project in conjunction with Princeton Survey Research Associates in November 2010 shows that 54 percent of adults in the United States used the internet to get information about the 2010 midterm elections and about specific candidates. This represents 73 percent of adult internet users. The study also showed that 22 percent of adult internet users used social network sites or Twitter to get information about and discuss the elections and 26 percent of all adults used cell phones to learn about or participate in campaigns.[2] With huge impact from often biased media, general public is often mislead by the media, and then we start to see suprises after elections. The presidency of Donald Trump began at noon EST on January 20, 2017, Among the 44 persons who have served as president, only Donald Trump had never held a position in either government or the military prior to taking office. instal In contrast to the 2016 presidential election, where social media was a novelty, the candidates for election in 2020 had carefully managed social media strategies. With the concerns of all those mysterious, we start a study using social media data to analyze current dem candidates status, and help people to understand the 2020 presidential polls. We use social media like youtube, twitter, facebook to address the impact of social media in the 2020 United States presidential election. Social Media Election - Credit: Bing Images 1.3 Project 1.3.1 The Team Haibo Yu - hy2628 Kevin Gao - wg2311 1.3.2 The Plan Haibo: 1. Data collecting: Wrote a python script to do the web scraping work for youtube, facebook, twitter. 2. Data preprocessing: Clean up missing data, unified data and merge into csv. 3. Data analysis: Data exploration and visualization Kevin: 1. Data pipeline: Design, and architect the data flow and project details. 2. Data analysis: Data exploration and visualization 3. Data prediction*: Apply machine learning, NLP, GLM to make predictions of our data (According to the final project instruction for EDAV, we have to restrict ourselves to exploratory techniques,rather than modeling / prediction approaches). 1.3.3 The Questions Here are main questions that we hope we will be able to answer from this research. 1.3.3.0.0.1 Core questions: In each state, which candidate has more popularity online, in terms of views, likes, retweets…etc ? For each candidate, in which state he/she has more popularity online, in terms of views, likes, retweets…etc ? In general, which candidate has more popularity online ? 1.3.3.0.0.2 Potentially, we would like to answer these questions: Who is more concentrating on what topics ? Who is more popular in near future ? Is our result correlating to the final election result ? 1.4 References [1] Pollard, Timothy D.; Chesebro, James W.; Studinski, David Paul (2009). “The Role of the Internet in Presidential Campaigns”. Communications Studies. 60 (5): 574–88. doi:10.1080/10510970903260418. [2] Endres, Warnick (2004). “Text-based Interactivity in Candidate Campaign Web Sites: A case Study from the 2002 Elections”. Western Journal of Communication. 68 (3): 322–42. doi:10.1080/10570310409374804. Smith, Aaron. “Pew Internet &amp; American Life Project”. The Internet and Campaign 2010. Pew Research Center. "],
["data-sources.html", "Chapter 2 Data sources 2.1 Youtube 2.2 Twitter 2.3 Facebook 2.4 APIs", " Chapter 2 Data sources We conduct study around 3 social meida platform: Youtube, Twiter, Facebook. Our data source is original, collected from social meida networks, including youtube, facebook, twitter. Methodology: We wrote a python script (web crawler) to do the web scraping work to collect data. Obstacle: There certainly many obstacles in a project, however, here is an interesting one, when we were scraping search result data from youtube for each candidate, we faced with obstacles when grabing the full data from the lazy loading result page, which would hide large content and load those later by user scrolling down to the bottom of the page, this actually prevented us to rely on the initial html dom to scrap the full data. And it’s hard to use web scrawler in python to control the lazy loading behavior. Solution: After serveral attempts, we have resolved this by using a walk-around solution provided in youtube search feature, by adding a paramter ‘&amp;page=N’ (N is the number you would like to paginate) to laod all search result at once, then we can scrap the data page by page. 2.1 Youtube We use a python script to scape the data, generated csvs and details listed below: 2.1.1 Videos We have 52196 data entries for youtube video, and here is the summary per candidate: ## Amy Klobuchar Andrew Yang Bernie Sanders Cory Booker ## 4800 4824 4888 4788 ## Donald Trump Elizabeth Warren Joe Biden Kamala Harris ## 4761 4745 4768 4960 ## Pete Buttigieg Tom Steyer Tulsi Gabbard ## 4759 4095 4808 Here is the preview of the data, randomly sampled 10 entiries: 2.1.2 Comments We have 356891 data entries for youtube video comment, and here is the summary per candidate: ## Amy Klobuchar Andrew Yang Bernie Sanders Cory Booker ## 30441 40566 27892 32216 ## Donald Trump Elizabeth Warren Joe Biden Kamala Harris ## 26949 31477 27097 36559 ## Pete Buttigieg Tom Steyer Tulsi Gabbard ## 35558 29588 38548 Here is the preview of the data, randomly sampled 10 entiries: 2.2 Twitter 2.2.1 Tweets We use a python script to scape the data, generated csvs and details listed below: Here is the preview of the data, randomly sampled 10 entiries: 2.3 Facebook 2.3.1 Posts We use a python script to scape the data, generated csvs and details listed below: Here is the preview of the data, randomly sampled 10 entiries: 2.4 APIs Here is our code sample to show the API that we are using to pull the data (Youtube): def helperFinder(VideoId): headers = {&#39;Accept&#39;: &#39;*/*&#39;, &#39;Accept-Language&#39;: &#39;en-US,en;q=0.8&#39;, &#39;Cache-Control&#39;: &#39;max-age=0&#39;, &#39;User-Agent&#39;: &#39;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;Referer&#39;: &#39;http://www.youtube.com/&#39; } key = &quot;&lt;Your Google Youtbue API Key&gt;&quot; helper = &quot;https://www.googleapis.com/youtube/v3/videos?id={}&amp;part=snippet,statistics,recordingDetails&amp;key={}&quot;.format(VideoId,key) try: h = urllib.request.urlopen(urllib.request.Request(helper,headers=headers)) r = h.read() # r is bytes r = json.loads(r) # r now is a dict print(&quot;Success:&quot;, VideoId) except urllib.request.HTTPError: flg = False while True: try: h = urllib.request.urlopen(urllib.request.Request(helper,headers=headers)) r = h.read() # r is bytes r = json.loads(r) # r now is a dict flg = True break except: pass if flg: print(&quot;Success:&quot;, VideoId) else: print(&quot;Failure:&quot;, VideoId) return None def findTime(): timeStamp = r[&quot;items&quot;][0][&quot;snippet&quot;][&quot;publishedAt&quot;] trueTime = timeStamp[0:10] return trueTime def findLikeCount(): try: likeCount = r[&quot;items&quot;][0][&quot;statistics&quot;][&quot;likeCount&quot;] except: likeCount = 0 return int(likeCount) def findDislikeCount(): try: dislikeCount = r[&quot;items&quot;][0][&quot;statistics&quot;][&quot;dislikeCount&quot;] except: dislikeCount = 0 return int(dislikeCount) def findFavoriteCount(): try: favoriteCount = r[&quot;items&quot;][0][&quot;statistics&quot;][&quot;favoriteCount&quot;] except: favoriteCount = 0 return int(favoriteCount) def findCommentCount(): try: commentCount = r[&quot;items&quot;][0][&quot;statistics&quot;][&quot;commentCount&quot;] except: commentCount = -1 return int(commentCount) return {&quot;VideoId&quot;:VideoId,&quot;time&quot;:findTime(),&quot;likeCount&quot;:findLikeCount(),&quot;dislikeCount&quot;:findDislikeCount(), &quot;favorCount&quot;:findFavoriteCount(),&quot;commentCount&quot;:findCommentCount()} "],
["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation When we intially pulled youtube data, we did several plots and observed some inconsistent pattern with online 2020 presidential polls, so we digged into the result csvs and started to investigate what has been misaligned in the youtube original data. After random checks based on URLs, we first noticed some weirds characters in csv, like extrac title columns added due to the pulling code re-schedule, we can easily manually cleaned up those. Then we noticed some misformatted and duplicate columns during checking after polling scripts, this is due to the API failture and re-tries, we cleand it up in python script (duplicate entires), and R script (date time formats). Then we noticed some of the candidates have extremely unlikely total views from the aggregation level data, so we sorted the videos based on their views, and picked the top ones to eyespot check, then we found some videos that belonged to everyone, which was not specifically related to one candidate (Examples: “2020 Democratic Debate - SNL”, “DNC Town Hall - SNL”,“2020 November Democratic Debate in Atlanta | The Daily Show”,“2020 October Democratic Debate in Ohio | The Daily Show”…etc). After we filtered them out later in R data frame, our plots looked better. We alos filtered out Mr.“Donald Trump”, since he is not one of the democratic candidates, who are related to the ongoing DNC election right now. And here is the summary of video data per candidate after the cleaning: ## Amy Klobuchar Andrew Yang Bernie Sanders Cory Booker ## 4788 4800 4885 4777 ## Donald Trump Elizabeth Warren Joe Biden Kamala Harris ## 0 4737 4756 4945 ## Pete Buttigieg Tom Steyer Tulsi Gabbard ## 4742 4048 4796 Now we can see the 10 randomly selected sample entires from our video data: Now can continue to aggregate the data, i.e. sum the total video videws group by candidate to see in general who is mostly being watched in youtube online: "],
["missing-values.html", "Chapter 4 Missing values 4.1 Missing Pattern Detection 4.2 Missing Data Solution", " Chapter 4 Missing values Due to the scrap API that we are using, and the unstable columbia school network during the final week, there is some data missing from the original result csvs in our first several attempts. Then we update the API call, using try-catch to detect the failures (i.e. 403 forbbiden, 401 unauthorized, 404 not found, API daily limitation reached, API quota used up…etc), and set up logics to re-try with waiting durations, so this helps us improve the data integration dramatically. And here is how our data looks like during missing pattern check: 4.1 Missing Pattern Detection Example for missing data detection (Data from November 2019), since we pulled the data on-demand and cleaned up, there is no missing data in our vidoe csv, as: Note: If you are trying to use extracat::visna(sample,sort=“r”), you will get “Error in extracat::visna(df, sort =”r“) : No NA’s in the data. For indicator matrices please use visid(x, … ) and for factor data.frames there is visdf(x,freqvar)”. However, when we plot the youtube views per candidate per state, we do see some “missing data” in some states, this is due to the filter we were using when we pulled the original video data, like filter by 1 hour or 1 day, some candidates might have no data in some states, here is the intial plots we did: Note: The following regions were missing and are being set to NA: montana, oklahoma, delaware, wyoming, alabama, alaska, idaho, maryland, vermont, utah, kentucky, maine, connecticut, michigan, missouri, oregon, district of columbia, hawaii, illinois, indiana 4.2 Missing Data Solution Then we have updated the parameter to expand our filter to a larger duration (1 momth, 1 year) and added re-try logic in the API call (The code snippet is shared in Chapter-2.4) to make sure we have pulled enough data per candidate per state, as you can see now from the plots based on the latest data, we don’t have any “missing data” this time! Example (Data from December 2019) "],
["results.html", "Chapter 5 Results 5.1 Youtube 5.2 Twitter 5.3 Facebook", " Chapter 5 Results 5.1 Youtube 5.1.1 Initial Investigation Here is the result for total views per candiate online: Here is the result for views density per candidate per state: From the series of plots using choropleth maps, we can compare: a) In each state, which candidate has more popularity online, in terms of views. b) For each candidate, in which state he/she has more popularity online, in terms of views. 5.1.2 Topic Analysis Here are word cloud plots for top topics in 2020 presidential election on Youtube: 5.1.3 Popularity Analysis Here are the core plots for our study to show which candidate are actually more popular online, based on video viewers’ likes and dislikes aggragation: Here are core plots for our study to show which candidate in which state are actually more popular online, based on video viewers’ likes and dislikes aggragation: 5.1.4 Comment Analysis Here are word cloud for comments per candidate on Youtube: Here is one of the core plots for our study to show the total diverging sentiment score per candidate on Youtube: 5.1.5 Demographics Credit:castfromclay.co.uk 5.2 Twitter 5.2.1 Tweet Analysis Here are word cloud plots for top topics in 2020 presidential election on Twitter: (Bonus viz on “twitter president”) Here is one of the core plots for our study to show the total diverging sentiment score per candidate on Twitter: 5.2.2 Demographics Credit:castfromclay.co.uk 5.3 Facebook 5.3.1 Post Analysis Here are word cloud for posts per candidate on Facebook: Here is one of the core plots for our study to show the total sentiment score per candidate on Facebook: 5.3.2 Demographics Credit:castfromclay.co.uk (Please note: We have more demographics analysis in Chapter-6, as interactive components.) "],
["interactive-components.html", "Chapter 6 Interactive Components 6.1 Interactive Choropleth Maps (R Component) 6.2 Interactive Social Media Demographics (Html Component)", " Chapter 6 Interactive Components 6.1 Interactive Choropleth Maps (R Component) Here are core plots for our study to show which candidate in which state are actually more popular online, based on video viewers’ likes and dislikes aggragation, so we decided to make it interactive for the users: (Video captured, feel free to checkout the source code below:) library(tidyverse) library(dplyr) library(choroplethr) library(ggplot2) library(plotly) # load social meida data - Youtube, from 12/12/2019: df2 &lt;- read.csv(&quot;data/2019-12-12.csv&quot;) df2 &lt;- filter(df2, candidate != &quot;Donald Trump&quot;) df2 &lt;- filter(df2, title!=&quot;2020 Democratic Debate - SNL&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;DNC Town Hall - SNL&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;2020 November Democratic Debate in Atlanta | The Daily Show&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;2020 October Democratic Debate in Ohio | The Daily Show&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;Stephen Colbert Breaks Down The 5th Democratic Presidential Debate&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;Democratic candidates debate: Opening statements l ABC News&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;I&#39;m Gay - Eugene Lee Yang&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;Mark Morrison - Return Of The Mack [OFFICIAL MUSIC VIDEO]&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;Kavanaugh Hearing Cold Open - SNL&quot;) # remove irrelated videos df2 &lt;- filter(df2, title!=&quot;THE CONJURING - The Real Lorraine Warren Featurette&quot;) # remove irrelated videos candidates &lt;- c(&#39;Amy Klobuchar&#39;,&#39;Andrew Yang&#39;,&#39;Bernie Sanders&#39;,&#39;Cory Booker&#39;,&#39;Elizabeth Warren&#39;,&#39;Joe Biden&#39;,&#39;Kamala Harris&#39;,&#39;Pete Buttigieg&#39;,&#39;Tom Steyer&#39;,&#39;Tulsi Gabbard&#39;) for(i in candidates) { # i-th name of candiates # ------------------------------------------------------ temp &lt;- filter(df2, candidate == i) temp &lt;- temp %&gt;% as.data.frame() %&gt;% transmute(region = state, value = (as.numeric(temp$like)-as.numeric(temp$dislike)), like=like, dislike=dislike) # unique(df$region) 45 states temp &lt;- temp %&gt;% group_by(region) %&gt;% summarise(value = sum(value), like=sum(like), dislike=sum(dislike)) temp &lt;- na.omit(temp) temp$hover &lt;- with(temp, paste(region, &#39;&lt;br&gt;&#39;, &#39;Value&#39;, value, &#39;&lt;br&gt;&#39;,&#39;Like&#39;,like,&#39;&lt;br&gt;&#39;, &#39;Dislike&#39;,dislike)) # give state boundaries a white border l &lt;- list(color = toRGB(&quot;#ece3fc&quot;), width = 5) # specify some map projection/options g &lt;- list( scope = &#39;usa&#39;, projection = list(type = &#39;albers usa&#39;), showlakes = TRUE, lakecolor = toRGB(&#39;#ece3fc&#39;) ) p &lt;- plot_geo(temp, locationmode = &#39;USA-states&#39;) %&gt;% add_trace( z = ~value, text = ~hover, locations = ~state.abb[which(state.name == region)], color = ~value, colors = &#39;Purples&#39; ) %&gt;% colorbar(title = &quot;Like Count&quot;) %&gt;% layout( title = paste(i,&quot; - Youtube Likes by State&lt;br&gt;(Hover for breakdown)&quot;), geo = g ) print(p) # ------------------------------------------------------ } 6.2 Interactive Social Media Demographics (Html Component) (credit: Pew Research Center) 6.2.1 Social media use over time 6.2.2 Who uses social media 6.2.3 Which social media platforms are most popular 6.2.4 How often Americans use social media sites "],
["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion Credit: Bing Images The use of social media in politics including Twitter, Facebook, and YouTube has dramatically changed the way campaigns are run and how Americans interact with their elected officials. The prevalence of social media in politics has made elected officials and candidates more accountable and accessible to voters. From our close look at social media data and analyze with demographics data collected online, we can infer those insights towards 2020 presidential election: In general, we can see the current candidates’ popularity ranking on Youtube is:Andrew Yang &gt; Tulsi Gabbard &gt; Bernie Sanders &gt; Tom Steyer &gt; Pete Buttigieg &gt; Elizabeth Warren &gt; Kamala Harris &gt; Joe Biden &gt; Cory Booker &gt; Amy Kilobuchar (From this result) Which is not exactly aligned with the national polls, results definitely show weak correlation between Youtube likes and poll results. To help understand this, according the demographics study on Youtube, most active viewers are uban young people, who may or may not have right to vote yet, some of those are not U.S. citizen, so this result shouldn’t surprise us too much. From the Youtube state series choropleth maps, both static and interactive ones, we can see the top candidates like Bernie Sanders, Joe Biden and Elizabeth Warren has more views data across states, this could depend on different amount they have spent on advertising, however, on the other hand, videos with more views don’t always have more likes, so the likes data indicates there is weak correlation between Youtbue likes and candidates budget. In general, from Youtube views by state chart, most views across all candiate appear both east and west coast, major urban cities, which indicates that peopel from the 11 swing states watch less youtube videos of these democrat candidates. In general, from Youtube likes by state chart, there is no likes pattern cross candidates, each candidate’s popular states are different, and the difference between the states are often huge. This could be related to their residential location and policy coverage. From the Youtube title and description data, we can see different candidate is focusing on different topics. (From this result) From the Youtube comments data, we can rank the sentiment score of comments in each candidate’s videos: (From this result) Andrew Yang &gt; Tulsi Gabbard &gt; Pete Buttigieg &gt; Bernie Sanders &gt; Amy Kilobuchar &gt; Tom Steyer &gt; Elizabeth Warren &gt; Cory Booker &gt; Joe Biden &gt; Kamala Harris. Which is not exactly aligned with the national polls, results definitely show weak correlation between Youtube likes and poll results. From Twitter tweets data, we can see different candidate talks different topics and their sentiment score are very diverging. (From this result) From Facebook posts data, we can see different candidate talks different topics and their sentiment score are not very diverging, mostly positive. (From this result) Hope these social media data analysis can help you understand better about 2020 Presidential Polls, feel free to send feedbacks, and don’t forget to vote! Credits EDAVproject wikipedia stackoverflow rdocumentation Google Data API References Latest 2020 Presidential polls Daily presidential tracking poll "]
]
